var documenterSearchIndex = {"docs":
[{"location":"pages/utils/#Utils","page":"Utils","title":"Utils","text":"","category":"section"},{"location":"pages/utils/","page":"Utils","title":"Utils","text":"ag_save\nag_show","category":"page"},{"location":"pages/utils/#AgTables.ag_save","page":"Utils","title":"AgTables.ag_save","text":"ag_save([, filepath], table)\n\nSaves the table to a location specified by filepath (the preferred file extension is html). By default, saves the table to the home directory.\n\nSee also ag_show.\n\n\n\n\n\n","category":"function"},{"location":"pages/utils/#AgTables.ag_show","page":"Utils","title":"AgTables.ag_show","text":"ag_show(table; filepath = joinpath(homedir(), \"agtable.html\"))\n\nSaves the table to a location specified by filepath and displays it in the browser.\n\nSee also ag_save.\n\n\n\n\n\n","category":"function"},{"location":"pages/table/#table","page":"Table","title":"Table","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AGTable\nag_table","category":"page"},{"location":"pages/table/#AgTables.AGTable","page":"Table","title":"AgTables.AGTable","text":"AGTable\n\nA base type that contains the necessary information to visualize a table.\n\nSee also: ag_table, ag_show, ag_save.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#AgTables.ag_table","page":"Table","title":"AgTables.ag_table","text":"ag_table(data::Vector{T}, column_defs::AbstractColumnDef...; kw...) -> AGTable\n\nCreates a table using data, where elements can be NamedTuples, Dicts, or custom types. With column_defs you can configure parameters and formatting of columns.\n\nwarning: Warning\nAdding more than 100K data rows to a table may cause performance issues.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\nname::String \"AgTables ❤️ Julia\" Table name and tab title.\nresize::Bool true Column width flexibility.\nflex::Bool true Stretching columns to fit the available width.\nheader_height::Integer 40 Header height in px.\nrow_height::Integer 39 Row height in px.\ncolumn_filter::Bool false If a filter for column names should be used.\n\nSee also: ag_show, ag_save.\n\n\n\n\n\n","category":"function"},{"location":"pages/table/#Example","page":"Table","title":"Example","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"using AgTables\n\nstruct Foo\n    a::String\n    b::String\n    c::String\nend\n\nsample_data = [\n    (a = \"1\", b = \"2024-01-01\", c = \"tuple\"),\n    Dict(\"a\" => \"2\", \"b\" => \"2024-01-01\", \"d\" => \"dict\"),\n    Foo(\"3\", \"2024-01-01\", \"struct\"),\n]\n\ntable = ag_table(sample_data)\n\nag_save(\"table_example.html\", table)\nnothing # hide","category":"page"},{"location":"pages/table/","page":"Table","title":"Table","text":"    <iframe src=\"../table_example.html\" style=\"height:200px;width:100%;\"></iframe>","category":"page"},{"location":"pages/table/#Panel","page":"Table","title":"Panel","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AGPanel\nag_panel","category":"page"},{"location":"pages/table/#AgTables.AGPanel","page":"Table","title":"AgTables.AGPanel","text":"AGPanel\n\nA type that allows you to combine multiple table for visualization.\n\nSee also: ag_panel, ag_show, ag_save.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#AgTables.ag_panel","page":"Table","title":"AgTables.ag_panel","text":"ag_panel(tables::AGTable...; kw...) -> AGPanel\n\nCreates a panel combining several tables.\n\nKeyword arguments\n\nName::Type Default/Posible values Description\nname::String \"AgTables ❤️ Julia\" Panel name (will be displayed in the browser tab title).\nbottom::Bool false Move the table tabs to the bottom of the page.\n\nSee also: ag_show, ag_save.\n\n\n\n\n\n","category":"function"},{"location":"pages/table/#Example-2","page":"Table","title":"Example","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"using AgTables\n\ncars = [\n    (id = 1, make = \"Toyota\", model = \"Corolla\", year = 2020),\n    (id = 2, make = \"Ford\", model = \"Mustang\", year = 2019),\n    (id = 3, make = \"Honda\", model = \"Civic\", year = 2021),\n    (id = 4, make = \"Chevrolet\", model = \"Implata\", year = 2018),\n]\n\ncustomers = [\n    (id = 1, name = \"John\", email = \"john@example.com\"),\n    (id = 2, name = \"Jane\", email = \"jane@example.com\"),\n    (id = 3, name = \"Emily\", email = \"emily@example.com\"),\n    (id = 4, name = \"Michael\", email = \"michael@example.com\"),\n]\n\nrentals = [\n    (rental_id = 1, car_id = 1, customer_id = 1, rental_date = \"2024-06-01\"),\n    (rental_id = 2, car_id = 2, customer_id = 2, rental_date = \"2024-06-05\"),\n    (rental_id = 3, car_id = 3, customer_id = 3, rental_date = \"2024-06-07\"),\n    (rental_id = 4, car_id = 4, customer_id = 4, rental_date = \"2024-06-09\"),\n]\n\ntable1 = ag_table(cars, name = \"Cars\")\ntable2 = ag_table(customers, name = \"Customers\")\ntable3 = ag_table(rentals, name = \"Rentals\")\npanel = ag_panel(table1, table2, table3)\n\nag_save(\"panel_example.html\", panel)\nnothing # hide","category":"page"},{"location":"pages/table/","page":"Table","title":"Table","text":"    <iframe src=\"../panel_example.html\" style=\"height:200px;width:100%;\"></iframe>","category":"page"},{"location":"pages/table/#column","page":"Table","title":"Columns","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AGThreshold","category":"page"},{"location":"pages/table/#AgTables.AGColumns.AGThreshold","page":"Table","title":"AgTables.AGColumns.AGThreshold","text":"AGThreshold(value; kw...)\n\nType used to visually color-code column values based on a threshold. Can be used for numeric, string, and time columns.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\ncolor_up::String \"#399746\" Color for values above the threshold.\ncolor_down::String \"#ca3c32\" Color for values below the threshold.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#String-column","page":"Table","title":"String column","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AgStringColumnDef","category":"page"},{"location":"pages/table/#AgTables.AGColumns.AgStringColumnDef","page":"Table","title":"AgTables.AGColumns.AgStringColumnDef","text":"AgStringColumnDef(; kw...)\n\nType defining a string column and its display settings.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\nfield_name::String \"\" Column name in source data.\nheader_name::String field_name Override field_name as default with custom value.\nvisible::Bool true Column visibility.\nfilter::Bool false Enables a selector filter for column values.\ndefault_sort::AG_SORT_MODES nothing (AG_ASC, AG_DESC) Initial sorting in the column (ascending or descending order).\nstr_format::String \"%s\" String template for formatting values. The %s is replaced with the value.\nwidth::Integer nothing Column width.\ncell_background::String \"#fff\" Cell background.\nrect_background::String \"#fff\" Background color of the rectangle.\ncolor::String \"#000\" Text color.\ntext_align::AG_TEXTALIGN_TYPES AG_CENTER (AG_LEFT, AG_RIGHT) Text alignment.\ncolor_map::Dict{String,String} Dict{String,String}() Dictionary with colors of values (value => color).\nthreshold::AGThreshold nothing Settings for highlighting cells based on a threshold value.\nfilter_include::Vector{String} String[] Values that are active in the filter by default.\nfilter_exclude::Vector{String} String[] Values that are disabled in the filter by default.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#Example-3","page":"Table","title":"Example","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"using AgTables\n\nflights_sample_data = ag_flights_sample_data()\n\ntable = ag_table(\n    flights_sample_data,\n    AgStringColumnDef(\n        field_name = \"airline_name\",\n        header_name = \"Airlines\",\n        cell_background = \"#e8e8e8\",\n    ),\n    AgNumberColumnDef(\n        field_name = \"flight_number\",\n        header_name = \"Flight\",\n        color = \"#00b4d8\",\n        width = 100,\n    ),\n    AgStringColumnDef(\n        field_name = \"destination\",\n        header_name = \"Destination\",\n        filter = true,\n        filter_exclude = [\"Guatemala City\", \"Boston, MA\"],\n    ),\n    AgStringColumnDef(\n        field_name = \"status\",\n        header_name = \"Status\",\n        filter = true,\n        rect_background = \"#f0efeb\",\n        color_map = Dict(\n            \"In Air\" => \"#8ac926\",\n            \"Canceled\" => \"#ff595e\",\n            \"Scheduled\" => \"#999999\",\n        ),\n        text_align = AG_CENTER,\n    ),\n)\n\nag_save(\"string_example.html\", table)\nnothing # hide","category":"page"},{"location":"pages/table/","page":"Table","title":"Table","text":"    <iframe src=\"../string_example.html\" style=\"height:500px;width:100%;\"></iframe>","category":"page"},{"location":"pages/table/#Number-column","page":"Table","title":"Number column","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AGFormatter\nAgNumberColumnDef","category":"page"},{"location":"pages/table/#AgTables.AGColumns.AGFormatter","page":"Table","title":"AgTables.AGColumns.AGFormatter","text":"AGFormatter(; kw...)\n\nType used to configure the formatting of numeric column values.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\nshort::Bool false Uses letter abbreviations to represent large numbers.\nstyle::AG_STYLE_TYPES AG_DECIMAL (AG_CURRENCY, AG_PERCENT) The formatting style to use. Displays the corresponding currency or percent symbol next to the value.\ncurrency::AG_CURRENCY_CODES USD The currency symbol used in formatting.\nseparator::Bool false Separates thousandths values with a comma.\nminimum_fraction_digits::Integer 0 The minimum number of fraction digits to use.\nmaximum_fraction_digits::Integer 3 The maximum number of fraction digits to use.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#AgTables.AGColumns.AgNumberColumnDef","page":"Table","title":"AgTables.AGColumns.AgNumberColumnDef","text":"AgNumberColumnDef(; kw...)\n\nType defining a numeric column and its display settings.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\nfield_name::String \"\" Column name in source data.\nheader_name::String field_name Override field_name as default with custom value.\nvisible::Bool true Column visibility.\nfilter::Bool false Enables a filter for column values.\ndefault_sort::AG_SORT_MODES nothing (AG_ASC, AG_DESC) Initial sorting in the column (ascending or descending order).\nformatter::AGFormatter nothing Formatting of the numbers.\nstr_format::String \"%s\" String template for formatting values. The %s is replaced with the value.\nwidth::Integer nothing Column width.\ncell_background::String \"#fff\" Cell background.\nrect_background::String \"#fff\" Background color of the rectangle.\ncolor::String \"#000\" Text color.\ntext_align::AG_TEXTALIGN_TYPES AG_CENTER (AG_LEFT, AG_RIGHT) Text alignment.\ncolor_map::Dict{Number,String} Dict{Number,String}() Dictionary with colors of values (value => color).\nthreshold::AGThreshold nothing Settings for highlighting cells based on a threshold value.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#Example-4","page":"Table","title":"Example","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"using AgTables\n\ncurrencies_sample_data = ag_currencies_sample_data()\n\ntable = ag_table(\n    currencies_sample_data,\n    AgStringColumnDef(\n        field_name = \"currency_code\",\n        header_name = \"Currency\",\n        filter = true,\n        text_align = AG_CENTER,\n        rect_background = \"#f0efeb\",\n        default_sort = AG_ASC,\n    ),\n    AgNumberColumnDef(\n        field_name = \"exchange_rate\",\n        header_name = \"Exchange Rate\",\n        filter = true,\n        formatter = AGFormatter(style = AG_PERCENT),\n        threshold = AGThreshold(0.0, color_down = \"#ff595e\", color_up = \"#8ac926\"),\n    ),\n    AgNumberColumnDef(\n        field_name = \"market_cap\",\n        header_name = \"Market Cap\",\n        filter = true,\n        formatter = AGFormatter(\n            style = AG_CURRENCY,\n            currency = AgTables.USD,\n            separator = true,\n        ),\n    ),\n    AgNumberColumnDef(\n        field_name = \"daily_volume\",\n        header_name = \"Daily Volume\",\n        filter = true,\n        formatter = AGFormatter(short = true),\n    ),\n)\n\nag_save(\"number_example.html\", table)\nnothing # hide","category":"page"},{"location":"pages/table/","page":"Table","title":"Table","text":"    <iframe src=\"../number_example.html\" style=\"height:500px;width:100%;\"></iframe>","category":"page"},{"location":"pages/table/#Time-column","page":"Table","title":"Time column","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"AgTimeColumnDef","category":"page"},{"location":"pages/table/#AgTables.AGColumns.AgTimeColumnDef","page":"Table","title":"AgTables.AGColumns.AgTimeColumnDef","text":"AgTimeColumnDef(; kw...)\n\nType defining a time column and its display settings.\n\nKeyword arguments\n\nName::Type Default (Possible values) Description\nfield_name::String \"\" Column name in source data.\nheader_name::String field_name Override field_name as default with custom value.\nvisible::Bool true Column visibility.\nfilter::Bool false Enables a filter for column values.\ndefault_sort::AG_SORT_MODES nothing (AG_ASC, AG_DESC) Initial sorting in the column (ascending or descending order).\ndate_formatter::AG_DATE_FORMATTER AG_DATE_TIME (AG_TIME, AG_DATE) Specify time display format.\nstr_format::String \"%s\" String template for formatting values. The %s is replaced with the value.\nwidth::Integer nothing Column width.\ncell_background::String \"#fff\" Cell background.\nrect_background::String \"#fff\" Background color of the rectangle.\ncolor::String \"#000\" Text color.\ntext_align::AG_TEXTALIGN_TYPES AG_CENTER (AG_LEFT, AG_RIGHT) Text alignment.\ncolor_map::Dict{Union{Real,TimeType},String} Dict{Real,String}() Dictionary with colors of values (value => color).\nthreshold::AGThreshold nothing Settings for highlighting cells based on a threshold value.\n\n\n\n\n\n","category":"type"},{"location":"pages/table/#Example-5","page":"Table","title":"Example","text":"","category":"section"},{"location":"pages/table/","page":"Table","title":"Table","text":"using AgTables\n\norder_sample_data = ag_order_sample_data()\n\ntable = ag_table(\n    order_sample_data,\n    AgStringColumnDef(\n        field_name = \"symbol\",\n        text_align = AG_CENTER,\n        width = 120,\n    ),\n    AgTimeColumnDef(\n        field_name = \"createdAt\",\n        filter = true,\n        date_formatter = AG_DATE_TIME,\n        text_align = AG_CENTER,\n    ),\n    AgStringColumnDef(\n        field_name = \"orderStatus\",\n        rect_background = \"#f0efeb\",\n    ),\n    AgStringColumnDef(field_name = \"orderId\", visible = false),\n    AgStringColumnDef(field_name = \"orderSide\", visible = false),\n    AgStringColumnDef(field_name = \"orderType\", visible = false),\n    AgStringColumnDef(field_name = \"timeInForce\", visible = false),\n    AgStringColumnDef(field_name = \"origQty\", visible = false),\n    AgStringColumnDef(field_name = \"executedQty\", visible = false),\n    AgStringColumnDef(field_name = \"price\", visible = false);\n    column_filter = true,\n    header_height = 60,\n)\n\nag_save(\"time_example.html\", table)\nnothing # hide","category":"page"},{"location":"pages/table/","page":"Table","title":"Table","text":"    <iframe src=\"../time_example.html\" style=\"height:500px;width:100%;\"></iframe>","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: animation)","category":"page"},{"location":"#AgTables.jl","page":"Home","title":"AgTables.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"AgTables is an easy-to-use wrapper for the AG Grid library, designed for quick visualization and easy sharing of tabular data.","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"If you haven't installed our local registry yet, do that first:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] registry add https://github.com/bhftbootcamp/Green.git","category":"page"},{"location":"","page":"Home","title":"Home","text":"To install AgTables, simply use the Julia package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"] add AgTables","category":"page"},{"location":"#Usage","page":"Home","title":"Usage","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"In the most basic scenario, the user just needs to parse the data and put it in a table:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using AgTables\n\njulia> order_data = ag_order_sample_data()\n100-element Vector{AgTables.Order}:\n AgTables.Order(\"LTCUSDT\", DateTime(\"2024-05-29T13:40:00\"), \"ORD00001\", ...)\n AgTables.Order(\"ETHUSDT\", DateTime(\"2024-05-29T12:30:00\"), \"ORD00002\", ...)\n AgTables.Order(\"XRPUSDT\", DateTime(\"2024-05-29T13:00:00\"), \"ORD00003\", ...)\n\njulia> order_table = ag_table(order_data)\nAgTables.AGTable(Sheet1)\n\njulia> ag_show(order_table)\ntrue","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: order_table)","category":"page"},{"location":"","page":"Home","title":"Home","text":"To go further, the user can composite panels from tables and configure different parameters for each column of the table:","category":"page"},{"location":"","page":"Home","title":"Home","text":"using AgTables\n\nag_show(\n    ag_panel(\n        ag_table(\n            ag_stock_sample_data(),\n            AgNumberColumnDef(;\n                field_name = \"price\",\n                str_format = \"%s <span style='font-size:10px;color:rgb(120,123,134);font-weight:400'>USD</span>\",\n                visible = true,\n            ),\n            AgNumberColumnDef(;\n                field_name = \"h24\",\n                header_name = \"24h%\",\n                formatter = AGFormatter(;\n                    style = AG_PERCENT,\n                    maximum_fraction_digits = 2,\n                ),\n                threshold = AGThreshold(\n                    0;\n                    color_up = \"#22ab94\",\n                    color_down = \"#f23645\",\n                ),\n                filter = true,\n            ),\n            AgNumberColumnDef(;\n                field_name = \"volume\",\n                formatter = AGFormatter(;\n                    short = true,\n                ),\n            ),\n            AgNumberColumnDef(;\n                field_name = \"mkt\",\n                header_name = \"market сap\",\n                formatter = AGFormatter(;\n                    style = AG_CURRENCY,\n                    currency = AgTables.USD,\n                    separator = true,\n                ),\n            ),\n            AgStringColumnDef(;\n                field_name = \"sector\",\n                filter = true,\n            );\n            column_filter = true,\n            name = \"Stocks\",\n        ),\n        ag_table(\n            ag_order_sample_data(),\n            AgStringColumnDef(;\n                field_name = \"symbol\",\n                filter = true,\n            ),\n            AgStringColumnDef(;\n                field_name = \"orderSide\",\n                color_map = Dict(\n                    \"BUY\" => \"green\",\n                    \"SELL\" => \"red\",\n                ),\n                filter = true,\n            ),\n            name = \"Orders\",\n        ),\n    ),\n)","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: stock_order_panel)","category":"page"},{"location":"#Using-AG-Grid-Enterprise","page":"Home","title":"Using AG Grid Enterprise","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Set AG_GRID_LICENSE_KEY at runtime to enable AG Grid's enterprise features:","category":"page"},{"location":"","page":"Home","title":"Home","text":"ENV[\"AG_GRID_LICENSE_KEY\"] = \"YOUR_LICENSE_KEY_HERE\"","category":"page"}]
}
